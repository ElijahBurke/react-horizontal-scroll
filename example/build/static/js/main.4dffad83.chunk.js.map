{"version":3,"sources":["Components/Nav/Nav.jsx","Components/Hero/Hero.jsx","Components/Docs/GettingStarted/GettingStarted.jsx","Components/Docs/DisplayCodeAndRender/DisplayCodeAndRender.jsx","Components/Docs/BasicSetup/BasicSetup.jsx","Components/Docs/DocsSideNav/DocsSideNav.jsx","Components/Docs/Mappers/Mappers.jsx","Components/Docs/Width/Width.jsx","Components/Docs/Time/Time.jsx","Components/Docs/Delay/Delay.jsx","Components/Docs/Docs.jsx","App.jsx","index.jsx"],"names":["Nav","history","useHistory","className","href","rel","target","onClick","push","imgs","img","title","mapper","item","src","alt","Hero","list","time","width","type","GettingStarted","language","style","styles","source","DisplayCodeAndRender","css","jsx","buttonsRight","useState","currActive","setCurrActive","justifyContent","wrapLongLines","BasicSetup","DocsSideNav","name","undefined","FlipCard","Mappers","Width","setWidth","id","min","max","value","replace","onChange","e","Time","setTime","step","Delay","delayBetweenScroll","Docs","App","exact","path","component","render","routeProps","match","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dffad83.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Nav.scss';\n\nconst Nav = () => {\n  const history = useHistory();\n  return (\n    <nav className=\"Nav__nav\">\n      <a href=\"https://github.com/ElijahBurke/react-horizontal-scroll\" rel=\"noopener noreferrer\" target=\"_blank\">\n        GITHUB\n      </a>\n      <a href=\"https://www.npmjs.com/package/react-auto-glide\" rel=\"noopener noreferrer\" target=\"_blank\">\n        NPM\n      </a>\n      <a href=\"#\" onClick={() => history.push('/docs/getting-started')}>\n        DOCS\n      </a>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Hero.scss';\nimport { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport { useHistory } from 'react-router-dom';\n\nconst imgs = [\n  { img: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png', title: 'React' },\n  { img: 'https://cdn.worldvectorlogo.com/logos/redux.svg', title: 'Redux' },\n  { img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png', title: 'GraphQL' },\n  { img: 'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png', title: 'Ramda' },\n  { img: 'https://iconape.com/wp-content/files/fh/110909/png/typescript.png', title: 'TypeScript' },\n  { img: 'https://cdn.worldvectorlogo.com/logos/nodejs-icon.svg', title: 'NodeJS' },\n  { img: 'https://www.nextontop.com/assets/img/services/web/expressjs.svg', title: 'Express' },\n  { img: 'https://seeklogo.com/images/J/jest-logo-F9901EBBF7-seeklogo.com.png', title: 'Jest' },\n  { img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Postgresql_elephant.svg/1200px-Postgresql_elephant.svg.png', title: 'Postgres' },\n  { img: 'https://cdn.worldvectorlogo.com/logos/sequelize.svg', title: 'Sequelize' },\n  { img: 'https://img.icons8.com/color/452/mongodb.png', title: 'MongoDB' },\n  { img: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/mongoose/mongoose.png', title: 'Mongoose' },\n];\n\nconst mapper = (item) => (\n  <div className=\"scrolling__container\">\n    <div className=\"container__card\">\n      <img src={item.img} alt=\"\" />\n    </div>\n  </div>\n);\n\nfunction Hero () {\n  const history = useHistory();\n  return (\n    <div className=\"Hero__hero\">\n      <div className=\"hero__title\">\n        React Auto Carousel\n      </div>\n      <div className=\"hero__subtitle\">\n        Customisable Carousel That Displays Your Content In A\n        Gliding React Component\n      </div>\n      <div className=\"hero__glide-container\">\n        <ReactScrolling mapper={mapper} list={imgs} time=\"30s\" width=\"200px\" />\n      </div>\n      <div className=\"hero__buttons\">\n        <button type=\"button\">\n          <a href=\"https://github.com/ElijahBurke/react-horizontal-scroll\" rel=\"noopener noreferrer\" target=\"_blank\">\n            GitHub\n          </a>\n        </button>\n        <button type=\"button\" onClick={() => history.push('/docs/getting-started')}>\n          Docs\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from 'react';\nimport './GettingStarted.scss';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport * as styles from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\n\nfunction GettingStarted() {\n  const install = `# install the latest version\n$ npm i react-auto-slide`;\n\n  const importString = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';`;\n\n  const preReqs = `const imgs = [React, Redux, GraphQL, Ramda];\nconst mapper = (source) => <img src={source} alt=\"\" />;`;\n\n  const render = `<div className=\"glide-container\">\n  <ReactScrolling mapper={mapper} list={imgs} />\n</div>`;\n\n  const imgs = [\n    'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    'https://cdn.worldvectorlogo.com/logos/redux.svg',\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png',\n    'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png',\n  ];\n\n  const mapper = (source) => <img src={source} alt=\"\" />;\n\n  return (\n    <div className=\"GettingStarted__install\">\n      <div className=\"install__inner\">\n        <div className=\"install__title\">\n          Getting Started\n        </div>\n        <div className=\"install__subsubtitle\">\n          To add this to your project run the following in your terminal:\n        </div>\n        <div className=\"install__install__npm code__area\">\n          <SyntaxHighlighter language=\"bash\" style={styles.atomOneDark}>\n            {install}\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"install__import\">\n          Import the package in to the component you wish to use it in.\n        </div>\n        <div className=\"install__import-code code__area\">\n          <SyntaxHighlighter language=\"javascript\" style={styles.atomOneDark}>\n            {importString}\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"install__pre-reqs\">\n          Create a list and a function for converting items of that\n          lists in to the elements you wish to render.\n        </div>\n        <div className=\"install__pre-reqs-code code__area\">\n          <SyntaxHighlighter language=\"javascript\" style={styles.atomOneDark}>\n            {preReqs}\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"install__pre-reqs\">\n          Now you can render the Auto Glide component inside of a container which\n          controls where the div will be positioned.\n        </div>\n        <div className=\"install__pre-reqs-code code__area\">\n          <SyntaxHighlighter language=\"jsx\" style={styles.atomOneDark}>\n            {render}\n          </SyntaxHighlighter>\n        </div>\n        <div className=\"install__pre-reqs\">\n          And That\n          {'\\''}\n          s it! Below is what this would render. See further down for this example put\n          into one block!\n        </div>\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GettingStarted;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport './DisplayCodeAndRender.scss';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport * as styles from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction DisplayCodeAndRender({ css, jsx, buttonsRight }) {\n  const [currActive, setCurrActive] = useState('jsx');\n  return (\n    <>\n      <div className=\"display__tabs\" style={{ justifyContent: buttonsRight ? 'flex-end' : '' }}>\n        <button className={currActive === 'jsx' ? 'active' : ''} type=\"button\" onClick={() => setCurrActive('jsx')}>\n          JSX\n        </button>\n        <button className={currActive === 'css' ? 'active' : ''} type=\"button\" onClick={() => setCurrActive('css')}>\n          CSS\n        </button>\n      </div>\n      <div className=\"display__css-jsx\">\n        <SyntaxHighlighter language={currActive} style={styles.atomOneDark} wrapLongLines>\n          {currActive === 'jsx' ? jsx : css}\n        </SyntaxHighlighter>\n      </div>\n    </>\n  );\n}\n\nexport default DisplayCodeAndRender;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport './BasicSetup.scss';\nimport DisplayCodeAndRender from '../DisplayCodeAndRender/DisplayCodeAndRender';\n\nfunction BasicSetup() {\n  const imgs = [\n    'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    'https://cdn.worldvectorlogo.com/logos/redux.svg',\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png',\n    'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png',\n  ];\n\n  const mapper = (source) => <img src={source} alt=\"\" />;\n  const jsx = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport { React, Redux, GraphQL, Ramda } from './images';\n// This is an array of locally saved images.\nconst imgs = [React, Redux, GraphQL, Ramda];\nconst mapper = (source) => <img src={source} alt=\"\" />;\nfunction App() {\n  return (\n  <div className=\"glide-container\">\n    <ReactScrolling mapper={mapper} list={imgs} />\n  </div>\n  )\n}`;\n  const css = `body {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: centre;\n  align-items: centre;\n  padding: 3%\n}\n.glide-container {\n  width: 100%\n  height: 20%;\n}\n.glide-container img {\n  width: 80%\n}`;\n  return (\n    <div className=\"BasicSetup__basic-setup\">\n      <div className=\"basic-setup__containers\">\n        <div className=\"containers__left\">\n          <div className=\"left__title\">\n            Quick Setup\n          </div>\n          <div className=\"left__subtitle\">\n            This is an out the box example with minimal customization.\n            Check out how you can use other props to customise further!\n          </div>\n        </div>\n        <div className=\"containers__right\">\n          <DisplayCodeAndRender jsx={jsx} css={css} />\n        </div>\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BasicSetup;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-shadow */\n/* eslint-disable react/no-this-in-sfc */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport './DocsSideNav.scss';\nimport { useHistory } from 'react-router-dom';\n\nfunction DocsSideNav({ name }) {\n  const history = useHistory();\n  return (\n    <>\n      <div className=\"DocsSideNav__nav\">\n        <button className={name === 'getting-started' ? 'active' : undefined} type=\"button\" onClick={() => history.push('/docs/getting-started')}>Getting Started</button>\n        <button className={name === 'width' ? 'active' : undefined} type=\"button\" onClick={() => history.push('/docs/width')}>Element Width</button>\n        <button className={name === 'time' ? 'active' : undefined} type=\"button\" onClick={() => history.push('/docs/time')}>Time</button>\n        <button className={name === 'delay' ? 'active' : undefined} type=\"button\" onClick={() => history.push('/docs/delay')}>Delay Scroll</button>\n        <button className={name === 'mappers' ? 'active' : undefined} type=\"button\" onClick={() => history.push('/docs/mappers')}>More Advanced Mappers</button>\n      </div>\n    </>\n  );\n}\n\nexport default DocsSideNav;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { ReactScrolling } from 'react-auto-glide';\nimport DisplayCodeAndRender from '../DisplayCodeAndRender/DisplayCodeAndRender';\nimport './Mappers.scss';\n\nfunction FlipCard({ img, title }) {\n  return (\n    <div className=\"card\">\n      <div className=\"front\">\n        <img src={img} alt=\"\" />\n      </div>\n      <div className=\"back\">\n        {title}\n      </div>\n    </div>\n  );\n}\n\nconst imgs = [\n  { img: 'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png', title: 'React' },\n  { img: 'https://cdn.worldvectorlogo.com/logos/redux.svg', title: 'Redux' },\n  { img: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png', title: 'GraphQL' },\n  { img: 'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png', title: 'Ramda' },\n];\n\nfunction Mappers() {\n  const compJsx = `export default function FlipCard ({ img, title }) {\n  return (\n    <div className=\"card\">\n      <div className=\"front\">\n        <img src={img} alt=\"\" />\n      </div>\n      <div className=\"back\">\n        {title}\n      </div>\n    </div>\n  );\n};`;\n  const compCss = `.card{\n  position: relative;\n  margin: 2%;\n  width: 90%;\n  height: 90%;\n}\n.front,.back{\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  backface-visibility: hidden;\n  position: absolute;\n  transition: transform .6s linear;\n  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  border: 1px solid #111111;\n  background: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n}\n.front{\n  transform: perspective(600px) rotateY(0deg);\n}\n.back{\n  transform: perspective(600px) rotateY(180deg);\n}\n\n.front img {\n  width: 80%;\n}\n\n.card:hover > .front{\n  transform: perspective(600px) rotateY(-180deg);\n}\n.card:hover > .back{\n  transform: perspective(600px) rotateY(0deg);\n}`;\n\n  const renderJsx = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport FlipCard from './FlipCard';\nimport { React, Redux, GraphQL, Ramda } from './images';\n\nconst imgs = [\n  {img: React, title: 'React' },\n  {img: Redux, title: 'Redux' },\n  {img: GraphQL, title: 'GraphQL' },\n  {img: Ramda, title: 'Ramda' },\n];\n\nconst mapper = ({ img, title }) => <FlipCard img={img} title={title} />;\n\nfunction App() {\n  return (\n  <div className=\"glide-container\">\n    <ReactScrolling mapper={mapper} list={imgs} />\n  </div>\n  )\n};`;\n\n  const mapper = ({ img, title }) => <FlipCard img={img} title={title} />;\n\n  const renderCss = `body {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: centre;\n  align-items: centre;\n}\n.glide-container {\n  width: 100%\n  height: 20%;\n}`;\n  return (\n    <div className=\"Mappers__mappers\">\n      <div className=\"mappers__container\">\n        <div className=\"container__title\">\n          Advanced Mappers\n        </div>\n        <div className=\"container__subtitle\">\n          By allowing you to pass in a mapper function, you can make the scrolling\n          elements as complex as you want, using your own components or templates. Let\n          {'\\'s '}\n          build a component we want to use.\n        </div>\n        <div className=\"container__component-code\">\n          <DisplayCodeAndRender jsx={compJsx} css={compCss} />\n        </div>\n        <div className=\"container__subtitle\">\n          And now we can use this component to render a list of FlipCards!\n        </div>\n        <div className=\"container__component-code\">\n          <DisplayCodeAndRender jsx={renderJsx} css={renderCss} />\n        </div>\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} width=\"200px\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mappers;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { ReactScrolling } from 'react-auto-glide';\nimport DisplayCodeAndRender from '../DisplayCodeAndRender/DisplayCodeAndRender';\nimport './Width.scss';\n\nfunction Width () {\n  const [width, setWidth] = useState('30px');\n  const imgs = [\n    'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    'https://cdn.worldvectorlogo.com/logos/redux.svg',\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png',\n    'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png',\n  ];\n\n  const mapper = (source) => <img src={source} alt=\"\" />;\n  const jsx = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport { React, Redux, GraphQL, Ramda } from './images';\n// This is an array of locally saved images.\nconst imgs = [React, Redux, GraphQL, Ramda];\nconst mapper = (source) => <img src={source} alt=\"\" />;\nfunction App() {\n  return (\n  <div className=\"glide-container\">\n    <ReactScrolling mapper={mapper} list={imgs} width=\"${width}\" />\n  </div>\n  )\n}`;\n  const css = `body {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: centre;\n  align-items: centre;\n  padding: 3%\n}\n.glide-container {\n  width: 100%\n  height: 20%;\n}\n.glide-container img {\n  width: 80%\n}`;\n  return (\n    <div className=\"Width__width\">\n      <div className=\"width__container\">\n        <div className=\"container__title\">\n          Element Width\n        </div>\n        <div className=\"container__subtitle\">\n          Pass in the element width prop to define the width of each scrolling element.\n        </div>\n        <div className=\"container__subsubtitle\">\n          We need the width as a prop so that we can\n          calculate whether the list needs to be repeated.\n          As you can see below the images repeat to fill the container.\n        </div>\n        <div className=\"container__code\">\n          <DisplayCodeAndRender jsx={jsx} css={css} />\n        </div>\n        <input\n          type=\"range\"\n          id=\"width\"\n          name=\"width\"\n          min=\"30\"\n          max=\"200\"\n          value={width.replace('px', '')}\n          onChange={(e) => setWidth(`${e.target.value}px`)}\n        />\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} width={width} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Width;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { ReactScrolling } from 'react-auto-glide';\nimport DisplayCodeAndRender from '../DisplayCodeAndRender/DisplayCodeAndRender';\nimport '../Width/Width.scss';\n\nfunction Time() {\n  const [time, setTime] = useState('10s');\n  const imgs = [\n    'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    'https://cdn.worldvectorlogo.com/logos/redux.svg',\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png',\n    'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png',\n  ];\n\n  const mapper = (source) => <img src={source} alt=\"\" />;\n  const jsx = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport { React, Redux, GraphQL, Ramda } from './images';\n// This is an array of locally saved images.\nconst imgs = [React, Redux, GraphQL, Ramda];\nconst mapper = (source) => <img src={source} alt=\"\" />;\nfunction App() {\n  return (\n  <div className=\"glide-container\">\n    <ReactScrolling mapper={mapper} list={imgs} time=\"${time}\" />\n  </div>\n  )\n}`;\n  const css = `body {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: centre;\n  align-items: centre;\n  padding: 3%\n}\n.glide-container {\n  width: 100%\n  height: 20%;\n}\n.glide-container img {\n  width: 80%\n}`;\n\n  const onChange = (e) => {\n    setTime(`${e.target.value}s`);\n  };\n  return (\n    <div className=\"Width__width\">\n      <div className=\"width__container\">\n        <div className=\"container__title\">\n          Scroll Time\n        </div>\n        <div className=\"container__subtitle\">\n          Use the Time Prop to control how long the div takes to scroll from start to finish.\n        </div>\n        <div className=\"container__subsubtitle\">\n          Play around with the slider below and see how it effects the prop in the code snippet!\n        </div>\n        <div className=\"container__code\">\n          <DisplayCodeAndRender jsx={jsx} css={css} />\n        </div>\n        <input\n          type=\"range\"\n          id=\"width\"\n          name=\"width\"\n          min=\"10\"\n          max=\"90\"\n          step=\"5\"\n          value={time.replace('s', '')}\n          onChange={onChange}\n        />\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} time={time} width=\"150px\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Time;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { ReactScrolling } from 'react-auto-glide';\nimport DisplayCodeAndRender from '../DisplayCodeAndRender/DisplayCodeAndRender';\nimport '../Width/Width.scss';\n\nfunction Delay() {\n  const [time, setTime] = useState('1');\n  const imgs = [\n    'https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/react/react.png',\n    'https://cdn.worldvectorlogo.com/logos/redux.svg',\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/GraphQL_Logo.svg/1024px-GraphQL_Logo.svg.png',\n    'https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/943/full/ramda.png',\n  ];\n\n  const mapper = (source) => <img src={source} alt=\"\" />;\n  const jsx = `import { ReactScrolling } from 'react-auto-glide';\nimport 'react-auto-glide/dist/index.css';\nimport { React, Redux, GraphQL, Ramda } from './images';\n// This is an array of locally saved images.\nconst imgs = [React, Redux, GraphQL, Ramda];\nconst mapper = (source) => <img src={source} alt=\"\" />;\nfunction App() {\n  return (\n  <div className=\"glide-container\">\n    <ReactScrolling mapper={mapper} list={imgs} delayBetweenScroll=\"${time}\" />\n  </div>\n  )\n}`;\n  const css = `body {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: centre;\n  align-items: centre;\n  padding: 3%\n}\n.glide-container {\n  width: 100%\n  height: 20%;\n}\n.glide-container img {\n  width: 80%\n}`;\n\n  const onChange = (e) => {\n    setTime(e.target.value);\n  };\n  return (\n    <div className=\"Width__width\">\n      <div className=\"width__container\">\n        <div className=\"container__title\">\n          Delay Scroll\n        </div>\n        <div className=\"container__subtitle\">\n          Use the delayBetweenScroll to control the time (in ms) between scrolls\n        </div>\n        <div className=\"container__subsubtitle\">\n          Play around with the slider below and see how it effects the prop in the code snippet!\n        </div>\n        <div className=\"container__code\">\n          <DisplayCodeAndRender jsx={jsx} css={css} />\n        </div>\n        <input\n          type=\"range\"\n          id=\"width\"\n          name=\"width\"\n          min=\"1\"\n          max=\"5001\"\n          step=\"500\"\n          value={time}\n          onChange={onChange}\n        />\n        <div className=\"glide-container\">\n          <ReactScrolling mapper={mapper} list={imgs} delayBetweenScroll={time} width=\"150px\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Delay;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './Docs.scss';\nimport GettingStarted from './GettingStarted/GettingStarted';\nimport BasicSetup from './BasicSetup/BasicSetup';\nimport DocsSideNav from './DocsSideNav/DocsSideNav';\nimport Mappers from './Mappers/Mappers';\nimport Width from './Width/Width';\nimport Time from './Time/Time';\nimport Delay from './Delay/Delay';\n\nfunction Docs({ name }) {\n  return (\n    <div>\n      <DocsSideNav name={name} />\n      {name === 'getting-started'\n      && (\n        <>\n          <GettingStarted />\n          <BasicSetup />\n        </>\n      )}\n      {name === 'mappers' && <Mappers />}\n      {name === 'width' && <Width />}\n      {name === 'time' && <Time />}\n      {name === 'delay' && <Delay />}\n    </div>\n  );\n}\n\nexport default Docs;\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Nav from './Components/Nav/Nav';\nimport Hero from './Components/Hero/Hero';\nimport Docs from './Components/Docs/Docs';\n\nfunction App () {\n  return (\n    <>\n      <Router>\n        <Nav />\n        <div className=\"nav-buffer\" />\n        <Switch>\n          <Route exact path=\"/\" component={Hero} />\n          <Route exact path=\"/docs/:name\" render={(routeProps) => <Docs name={routeProps.match.params.name} />} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}